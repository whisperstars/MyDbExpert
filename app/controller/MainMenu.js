Ext.define('MDBE.controller.MainMenu', {    extend: 'Ext.app.Controller',	views: [		'MDBE.view.Forms.formConnection',		'MDBE.view.Forms.formDatabase',		'MDBE.view.Forms.formDBObject',		'MDBE.view.Forms.formSettings',		'MDBE.view.Forms.formLogin'	],		requires: ['MDBE.util.Utils'],	    init: function() {        this.control({			//'button[itemId=btnNewConnection],menuitem[itemId=btnNewConnection]': {			'#mmNewConnection':{				click: this.onBtnNewConnectionClick			},			'#mmOpenConnection':{				click: this.onBtnOpenConnectionClick			},				'#mmCloseConnection':{				click: this.onBtnCloseConnectionClick			},				'#mmChangeConnection':{				click: this.onBtnChangeConnectionClick			},				'#mmDropConnection':{				click: this.onBtnDropConnectionClick			},			'#mmNewDataBase':{                click: this.onBtnNewDataBaseClick            },			'#newTable': {				click: this.onBtnNewTableClick			},			'formdbobject button[itemId=btnCancel]': {				click: function(){alert('newdbobject button[itemId=btnCancel]')}			},            'button[itemId=btnLoadSettings]': {                click: this.onbtnLoadSettingsClick            },			'button[itemId=btnSaveSettings]': {                click: this.onbtnSaveSettingsClick            },			'#mmRefresh': {                click: this.onBtnRefresh            }			        });    },		onBtnNewConnectionClick: function() {		Ext.create('Ext.window.Window', {			title: 'New Connection',			iconCls: 'add_connection',			layout: 'fit',			width: 400,			modal: true,			items: [{xtype: 'connectionform'}],			listeners: {				show: function(w){ 					w.down('form').getForm().findField('Host').focus(true,100);				}			}		}).show();    },		onBtnOpenConnectionClick: function() {		/*var node = Ext.getCmp('TreeExplorer').getSelectionModel().getSelection()[0];		MDBE.util.Utils.expandTreeExplorerNode(node);*/		MDBE.util.Ajax.send('test',			'localhost',			'3306',			'root',						{				pass: '1',				submit: 'true'			},			function(response){				alert(Ext.decode(response.responseText));			},			function(){			}		);	},		onBtnCloseConnectionClick: function() {		var node = Ext.getCmp('TreeExplorer').getSelectionModel().getSelection()[0];		MDBE.util.Utils.closeConnection(node);	},		onBtnChangeConnectionClick: function() {		var connName = MDBE.util.Utils.getCurrentConnectionName();		var idx = MDBE.ConnectionsStore.find('connectionName', connName);		Ext.create('Ext.window.Window', {			title: 'New Connection',			iconCls: 'change_connect',			layout: 'fit',			width: 400,			modal: true,			items: [{				xtype: 'connectionform', 				action: 'edit',				connectionStoreIndex: idx  			}],			listeners: {				show: function(w){ 					w.down('form').getForm().findField('Host').focus(true,100);				}			}		}).show();	},	onBtnDropConnectionClick: function() {		//������� ���� �� ������		var node = Ext.getCmp('TreeExplorer').getSelectionModel().getSelection()[0];		var rootNode = Ext.getCmp('TreeExplorer').getRootNode();		rootNode.removeChild(node);		//������� �����. ������ �� ConnectionsStore		var connName = MDBE.util.Utils.getCurrentConnectionName();		var idx = MDBE.ConnectionsStore.find('connectionName', connName);		MDBE.ConnectionsStore.removeAt(idx);	},    onBtnNewDataBaseClick: function() {        //alert('onBtnNewDataBaseClick !');		var te = Ext.getCmp('TreeExplorer');		var cnt = MDBE.ConnectionsStore.count();		if (cnt==0){ //���� ������ ����������� ����			alert('First add connection!');			return false;		};		if (cnt==1){ //���� ����� ���� ����������� 			if (te.getSelectionModel().getSelection().length == 0){ //� ��� �� �������, �� �������� �������������				var n = te.getRootNode().getChildAt(0);				te.getSelectionModel().select(n);			};		};		//�� ��������� (selected) ���� ���������� �����. ���� �������� � ��������� �����������		var node = te.getSelectionModel().getSelection()[0];		var connectionNode = MDBE.util.Utils.getConnectionNode(node);		var connectionData = MDBE.util.Utils.getConnectionFromNode(connectionNode);		if (connectionData.connected){			//���� ����������� �������, �� �������� ����� �������� ����� ��			Ext.create('Ext.window.Window', {				title: 'New Database',				iconCls: 'add_database',				layout: 'fit',				width: 400,				modal: true,				items: [{					xtype: 'formdatabase',					connectionNode: connectionNode				}],				listeners: {					show: function(w){ 						w.down('form').getForm().findField('DBName').focus(true,100);					}				}			}).show();		} else {			//�������� ����� ������� ������ � �������� ���������� "������� ����� ����� ��"			Ext.create('Ext.window.Window', {				title: 'MySQL Login ',				iconCls: 'server_key',				layout: 'fit',				closable: false, 				width: 300,				modal: true,				items: [{					xtype: 'formlogin',					connectionData: connectionData,					node: connectionNode,					instructions: 'newDatabase'				}],				listeners: {					show: function(w){ 						w.down('form').getForm().findField('User').focus(true,100);					}				}			}).show();		}    },	    onBtnNewTableClick: function() {			Ext.create('Ext.window.Window', {			title: 'New Table',			layout: 'fit',			width: 300,			modal: true,			items: [{xtype: 'dbobjectform'}]		}).show();    },		onbtnLoadSettingsClick: function() {		Ext.create('Ext.window.Window', {			title: 'Point settings name',			layout: 'fit',			width: 300,			modal: true,			items: [{xtype: 'formsettings'}]		}).show();	},		onBtnRefresh: function(){		var node = Ext.getCmp('TreeExplorer').getSelectionModel().getSelection()[0];		//var connectionNode = MDBE.util.Utils.getConnectionNode(node);		//=========����������		r = [];		MDBE.util.Utils.getChildNodesRecursively(node, r);				//=========���������������		var s = Ext.JSON.encode(r);		MDBE.util.Utils.refreshNode(node, s);	}	});